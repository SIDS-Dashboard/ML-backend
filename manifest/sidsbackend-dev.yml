apiVersion: v1
kind: Namespace
metadata:
  name: #{namespace}#
---
#apiVersion: storage.k8s.io/v1
#kind: StorageClass
#metadata:
#  name: blob-fuse
#  namespace: ml-backend
#provisioner: blob.csi.azure.com
#parameters:
#  resourceGroup: ml-backend-group
#  storageAccount: mlbackendstorage  # cross subscription is not supported
#  containerName: datasets
#  location: eastus
#reclaimPolicy: Retain  # If set as "Delete" container would be removed after pvc deletion
#volumeBindingMode: Immediate
#---
apiVersion: v1
kind: Secret
metadata:
  name: azureblob-secret
  namespace: #{namespace}#
type: Opaque
data:
  azurestorageaccountname: #{storageAccountName}#
  azurestorageaccountkey: #{StorageAccountKey}#
---
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: datasetpv
#spec:
#  capacity:
#    storage: 10Gi
#  accessModes:
#  - ReadWriteMany
#  storageClassName: blob-fuse
#  persistentVolumeReclaimPolicy: Retain  # "Delete" is not supported in static provisioning
#  csi:
#    driver: blob.csi.azure.com
#    readOnly: true
#    volumeHandle: datasets  # make sure this volumeid is unique in the cluster
#    volumeAttributes:
#      containerName: datasets
#    nodeStageSecretRef:
#      name: azureblob-secret
#      namespace: ml-backend
#  mountOptions:
#    - dir_mode=0777
#    - file_mode=0777
#    - uid=1000
#    - gid=1000
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: pvc-blob
#  namespace: ml-backend
#spec:
#  accessModes:
#    - ReadWriteMany
#  resources:
#    requests:
#      storage: 10Gi
#  volumeName: datasetpv
#  storageClassName: blob-fuse
#---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sidmlbackend
  name: sidmlbackend
  namespace: #{namespace}#
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sidmlbackend
  template:
    metadata:
      labels:
        app: sidmlbackend
    spec:
      containers:
      - env:
        - name: MODEL_SERVICE
          value: twolvlImp
        image: #{ACRRepoUrl}#:#{ACRTag}#
        name: sidmlbackend
        ports:
        - containerPort: 80
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 80
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 240
        resources:
          limits:
            cpu: 800m
            memory: 2048Mi
          requests:
            cpu: 300m
            memory: 1024Mi
        startupProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 80
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 240
        volumeMounts:
        - mountPath: /mnt/azure/datasets
          name: azure
      volumes:
        - csi:
            driver: blob.csi.azure.com
            volumeAttributes:
              containerName: #{containerName}#
              mountOptions: -o allow_other --file-cache-timeout-in-seconds=120
              secretName: aksblob
          name: azure
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: autoscaler-sidmlbackend-http
  namespace: #{namespace}#
spec:
  maxReplicas: 6
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sidmlbackend
  targetCPUUtilizationPercentage: 50
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ingress-sidmlbackend
  namespace: #{namespace}#
spec:
  entryPoints:
    - web
  routes:
  - match: PathPrefix(`/twolvlImp`)
    kind: Rule
    services:
    - name: sidmlbackend
      port: 80
  - match: PathPrefix(`/`)
    kind: Rule
    services:
    - name: sidmlbackend
      port: 80
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ingress-sidmlbackend-https
spec:
  entryPoints:
    - websecure
  routes:
  - match: PathPrefix(`/twolvlImp`)
    kind: Rule
    services:
      - name: sidmlbackend
        port: 80
  - match: PathPrefix(`/`)
    kind: Rule
    services:
      - name: sidmlbackend
        port: 80
  tls:
    certResolver: default
---